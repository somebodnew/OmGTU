using System;

namespace ConsoleApplication9
{
    
    class AudiFond
    {
        public int seats;
        public bool proj;
        public int comps;
        public int korpus;
        public int floor;
        public int nomer;

        public AudiFond(int seats,bool proj,int comps, int korpus,int floor, int nomer)
        {
            this.seats = seats;
            this.proj = proj;
            this.comps = comps;
            this.korpus = korpus;
            this.floor = floor;
            this.nomer = nomer;
        }
        public bool hasProj()
        {
            return proj;
        }
        public int getSeats()
        {
            return seats;
        }
        public int getComps()
        {
            return comps;
        }
        public int getKorpus()
        {
            return korpus;
        }
        public int getFloor()
        {
            return floor;
        }
        public int getNomer()
        {
            return nomer;
        }
        public void setSeats(int b)
        {
            seats = b;
            return;
        }
        public void setComps(int b)
        {
            comps = b;
            return;
        }
        public void setKorpus(int b)
        {
            korpus = b;
            return;
        }
        public void setFloor(int b)
        {
            floor = b;
            return;
        }
        public void setNomer(int b)
        {
            nomer = b;
            return;
        }

        public void Info(AudiFond AAA)
        {
            if(AAA!=null)
            {
                Console.WriteLine("Auditory "+AAA.nomer+" is on "+AAA.floor+" floor in "+ AAA.korpus +" korpus.");
                Console.Write("It has " + AAA.comps + " computers, " + AAA.seats + " seats");
                if (AAA.hasProj() == true) Console.Write(" as well as projector");
                Console.WriteLine(".");
                Console.WriteLine();
            }
            
            return;
        }

    }
    class Menu
    {
        static AudiFond[] Based = new AudiFond[1];
        static public bool On = true;

        static public void CreateBased()
        {
            int seats = Convert.ToInt32(Console.ReadLine()),comps = Convert.ToInt32(Console.ReadLine()), korpus = Convert.ToInt32(Console.ReadLine()), floor = Convert.ToInt32(Console.ReadLine()), nomer = Convert.ToInt32(Console.ReadLine());
            bool proj = Convert.ToBoolean(Console.ReadLine());
            Based[0] = new AudiFond(seats,proj,comps,korpus,floor,nomer);
        }
        static public void AddAud()
        {
            int seats = Convert.ToInt32(Console.ReadLine()),comps = Convert.ToInt32(Console.ReadLine()), korpus = Convert.ToInt32(Console.ReadLine()), floor = Convert.ToInt32(Console.ReadLine()), nomer = Convert.ToInt32(Console.ReadLine());
            bool proj = Convert.ToBoolean(Console.ReadLine());
            Array.Resize(ref Based, Based.Length+1);
            Based[Based.Length-1] = new AudiFond(seats,proj,comps,korpus,floor,nomer);
        }
        static public void Sort1(int N)
        {
            for(int i=0; i < Based.Length;i++)
            {
                if (Based[i].getSeats() >= N) Based[i].Info(Based[i]);
            }
        }
        static public void Sort2(int N)
        {

        }
        static public void Sort3(int N)
        {

        }
        static public void Sort4(int N)
        {

        }
        static public void something()
        {

        }
        static public void Info()
        {
            for (int i = 0; i < Based.Length; i++) Based[i].Info(Based[i]);
            Console.WriteLine();
            return;
        }
        static public void Exit()
        {
            On = false;
            return;
        }
    }
    class Program
    {
        static void Main(string[] args)
        {
            Menu.CreateBased();
            while (Menu.On)
            {
                //Console.WriteLine("введите 1 для создания базы данных");
                Console.WriteLine("введите 2 для дополнения базы данных");
                Console.WriteLine("введите 3 для выборки по количеству мест");
                Console.WriteLine("введите 4 для  выборки по количеству компьютеров");
                Console.WriteLine("введите 5 для выборки по наличию компьютеров на заданном этаже");
                Console.WriteLine("введите 6 для выборки по номеру корпуса, этажу и количеству мест в аудитории");
                Console.WriteLine("введите 7 для изменения данных для заданной аудитории");
                Console.WriteLine("введите 8 для вывода всех данных");
                Console.WriteLine("введите 9, чтобы окончить работу");

                
            }
        }
    }
}
